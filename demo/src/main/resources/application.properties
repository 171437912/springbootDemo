##端口号
server.port=8080

########## MySQL ###########
spring.datasource.url=jdbc:mysql://localhost:3306/csy?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.password=123456
spring.datasource.username=root

logging.level.com.battcn=DEBUG
########## Mybatis 自身配置 ##########
mybatis.mapper-locations=classpath:com/example/demo/mapper/*.xml
mybatis.type-aliases-package=com.example.demo.entity
mybatis.configuration.map-underscore-to-camel-case=true
########## 通用Mapper ##########
#主键自增回写方法
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
#设置 insert 和 update 中，是否判断字符串类型!=”##
mapper.not-empty=true
#枚举按简单类型处理
mapper.enum-as-simple-type=true
########## 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true

######### springCache Redis ######
spring.redis.host=localhost
spring.redis.password=123456
# 一般来说是不用配置的，Spring Cache 会根据依赖的包自行装配
spring.cache.type=redis
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#登录命令  redis-cli.exe -h 127.0.0.1 -p 6379 //无需添加密码参数
#修改密码
#　config get requirepass //获取当前密码
#　config set requirepass "yourpassword"//设置当前密码,服务重新启动后又会置为默认，即无密码；不建议此种方式
#登录命令  redis-cli.exe -h 127.0.0.1 -p 6379 -a 123456  //需添加密码参数


########## swagger ui###########
# 扫描的包路径,默认扫描所有
spring.swagger.base-package=com.example.demo
# 默认为 true
spring.swagger.enabled=true


############## 描述信息 #############
info.name=lyk
info.server.port=${server.port}

############## 文件上传下载 ##############
# 禁用 thymeleaf 缓存
spring.thymeleaf.cache=false
# 是否支持批量上传   (默认值 true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目录 （一般情况下不用特意修改）
spring.servlet.multipart.location=
# 上传文件最大为 1M （默认值 1M 根据自身业务自行控制即可）
spring.servlet.multipart.max-file-size=1048576
# 上传请求最大为 10M（默认值10M 根据自身业务自行控制即可）
spring.servlet.multipart.max-request-size=10485760
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改）
spring.servlet.multipart.resolve-lazily=false